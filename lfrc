
# remove some default values
map d
map m
map o
map n
map f
map r
map p
map c

#functions
cmd sudorm %{{
	printf "sure (yes/no)"
	read ans
	if [[ $ans == 'yes' ]];then
		sudo rm -r $f
	else
		exit
	fi
}}

cmd scp %{{                     # need to use full path for commands
	echo 'where to copy'
	read PATH
	echo 'use root (y/n/abort)'
	read ans
	if [[ $ans == 'y' ]]; then
		/bin/sudo /bin/cp -r $f $PATH
	elif [[ $ans == 'n' ]]; then
		/usr/bin/cp -r $f $PATH
	else
		echo 'aborted'
		exit
	fi
}}

cmd mkdir %{{
	echo 'Name of the dir.'
	read NAME
	echo 'Want to use root(y/n/abort)'
	read ans
	if [[ $ans == 'y' ]]; then
		sudo mkdir $NAME
		echo 'created $NAME'
	elif [[ $ans == 'n' ]]; then
		mkdir $NAME
		echo 'created $NAME'
	else
		echo 'aborted'
		exit
	fi
}}

cmd mkfile %{{
	echo 'Name of the file:'
	read NAME
	echo 'want to use root(y/n)'
	read ans
	if [[ $ans == 'y' ]]; then
		sudo touch $NAME
		echo '$NAME added'
	else
		touch $NAME
		echo '$NAME added'
	fi	
}}


cmd fzf_jump ${{
  res="$(find . -maxdepth 3 | fzf --reverse --header='Jump to location')"
  if [ -f "$res" ]; then
    cmd="select"
  elif [ -d "$res" ]; then
    cmd="cd"
  fi
  lf -remote "send $id $cmd \"$res\""
}}


cmd unarchive ${{
  case "$f" in
      *.zip) 7z x "$f" ;;
      *.tar.gz) tar -xzvf "$f" ;;
      *.tar.bz2) tar -xjvf "$f" ;;
      *.tar) tar -xvf "$f" ;;
      *) echo "Unsupported format" ;;
  esac
}}


# mapping for functions
map rm sudorm
map cp scp
map mf mkfile
map md mkdir
map VV ${{feh --zoom 90 $f}}
map nv ${{nvim $f}}
map fz fzf_jump
map ex unarchive

# properties

# set hidden true
set drawbox true
set icons true 
set preview true

# setting keys 
map DD delete
map C copy
map X cut
map V paste
map rr rename
map . set hidden!
map R reload

